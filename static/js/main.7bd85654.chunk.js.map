{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","Api.js","App.js","index.js"],"names":["MovieCard","Title","Plot","Poster","imdbID","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","FindMovie","addNew","useState","inputValue","setInputValue","setSingleMovie","add","movieName","a","param","fetch","then","response","json","result","htmlFor","type","id","placeholder","classNames","Error","value","onChange","event","target","hidden","onClick","App","setMovies","newMovie","find","e","ReactDOM","render","document","getElementById"],"mappings":"8UAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MACAC,EAFuB,EAEvBA,KACAC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,OAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAI,qCAAgCJ,IAAvC,aAaRJ,EAAUS,aAAe,CACvBR,MAAO,GACPC,KAAM,GACNC,OAAQ,GACRC,OAAQ,IChDH,IAAMM,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAMT,QAAYS,S,+CCD3BE,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACHC,mBAAS,IADN,mBAChCC,EADgC,KACpBC,EADoB,OAEPF,oBAAS,GAFF,mBAEhCJ,EAFgC,KAEzBO,EAFyB,KAGjCC,EAAG,uCAAG,WAAMC,GAAN,SAAAC,EAAA,kEAAmBH,EAAnB,SCTWI,EDSuCF,ECT9BG,MAAM,GAAD,OAF3B,+CAE2B,OAAUD,IAC9CE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIA,KDOJ,6FCTW,IAAAL,IDSX,OAAH,sDAGT,OACE,oCACE,0BAAMnB,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQyB,QAAQ,eAAjC,eAGA,yBAAKzB,UAAU,WACb,2BACE0B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ5B,UAAW6B,IAAW,QAAS,CAC7B,YAAarB,EAAMsB,QAErBC,MAAOlB,EACPmB,SAAU,SAAAC,GAAK,OAAInB,EAAcmB,EAAMC,OAAOH,WAGlD,uBACE/B,UAAW6B,IAAW,OAAQ,CAC5B,YAAarB,EAAMsB,QAErBK,OAAQ3B,EAAMsB,OAEbtB,EAAMsB,OAAS,8EAGpB,yBAAK9B,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACE0B,KAAK,SACL1B,UAAU,kBACVoC,QAAS,kBAAMpB,EAAIH,KAHrB,iBASF,yBAAKb,UAAU,WACb,4BACE0B,KAAK,SACL1B,UAAU,oBACVoC,QAAS,kBAAMzB,EA7CEH,KA0CnB,sBAYN,yBAAKR,UAAU,aACZQ,IAAUA,EAAMsB,MACf,oCACE,wBAAI9B,UAAU,SAAd,WACA,kBAAC,EAAcQ,IAEf,MEnEC6B,EAAM,WAAO,IAAD,EACKzB,mBAAS,IADd,mBAChBN,EADgB,KACRgC,EADQ,KAYvB,OACE,yBAAKtC,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAWW,OAhBG,SAAC4B,IACIjC,EAAOkC,MAAK,SAAAC,GAAC,OAAIA,EAAE1C,SAAWwC,EAASxC,WAEvCwC,EAAS3C,OAIhC0C,EAAU,GAAD,mBAAKhC,GAAL,CAAaiC,WCT1BG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7bd85654.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  Title,\n  Plot,\n  Poster,\n  imdbID,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={Poster}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{Title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {Plot}\n        <br />\n        <a href={`https://www.imdb.com/title/${imdbID}`}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  Title: PropTypes.string,\n  Plot: PropTypes.string,\n  Poster: PropTypes.string,\n  imdbID: PropTypes.string,\n};\n\nMovieCard.defaultProps = {\n  Title: '',\n  Plot: '',\n  Poster: '',\n  imdbID: '',\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbID} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbID: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { MovieCard } from '../MovieCard';\nimport { findMovie } from '../../Api';\n\nexport const FindMovie = ({ addNew }) => {\n  const [inputValue, setInputValue] = useState('');\n  const [movie, setSingleMovie] = useState(false);\n  const add = async movieName => setSingleMovie(await findMovie(movieName));\n  const someFunction = item => movie;\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': movie.Error,\n              })}\n              value={inputValue}\n              onChange={event => setInputValue(event.target.value)}\n            />\n          </div>\n          <p\n            className={classNames('help', {\n              'is-danger': movie.Error,\n            })}\n            hidden={movie.Error}\n          >\n            {movie.Error && <>Can&apos;t find a movie with such a title</>}\n          </p>\n        </div>\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => add(inputValue)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => addNew(someFunction(movie))}\n            >\n              Add to the list\n\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {movie && !movie.Error ? (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard {...movie} />\n          </>\n        ) : ''}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addNew: PropTypes.func.isRequired,\n};\n","const URL = 'https://www.omdbapi.com/?apikey=37e52d7c&t=';\n\nexport const findMovie = param => fetch(`${URL}${param}`)\n  .then(response => response.json())\n  .then(result => result);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState([]);\n  const addNewMovie = (newMovie) => {\n    const checkMovieImbd = movies.find(e => e.imdbID === newMovie.imdbID);\n\n    if (checkMovieImbd || !newMovie.Title) {\n      return;\n    }\n\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addNew={addNewMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}